[INFO 19:19:08] pymarl Running command 'my_main'
[INFO 19:19:08] pymarl Started run with ID "155"
[DEBUG 19:19:08] pymarl Starting Heartbeat
[DEBUG 19:19:08] my_main Started
[WARNING 19:19:08] my_main CUDA flag use_cuda was switched OFF automatically because no CUDA devices are available!
[INFO 19:19:08] my_main Experiment Parameters:
[INFO 19:19:08] my_main 

{   'action_selector': 'epsilon_greedy',
    'agent': 'rnn',
    'agent_output_type': 'q',
    'batch_size': 32,
    'batch_size_run': 1,
    'buffer_cpu_only': True,
    'buffer_size': 5000,
    'checkpoint_path': '',
    'critic_lr': 0.0005,
    'double_q': True,
    'env': 'sc2',
    'env_args': {   'continuing_episode': False,
                    'debug': False,
                    'difficulty': '7',
                    'game_version': None,
                    'heuristic_ai': False,
                    'heuristic_rest': False,
                    'map_name': '2s3z',
                    'move_amount': 2,
                    'obs_all_health': True,
                    'obs_instead_of_state': False,
                    'obs_last_action': False,
                    'obs_own_health': True,
                    'obs_pathing_grid': False,
                    'obs_terrain_height': False,
                    'obs_timestep_number': False,
                    'replay_dir': '',
                    'replay_prefix': '',
                    'reward_death_value': 10,
                    'reward_defeat': 0,
                    'reward_negative_scale': 0.5,
                    'reward_only_positive': True,
                    'reward_scale': True,
                    'reward_scale_rate': 20,
                    'reward_sparse': False,
                    'reward_win': 200,
                    'seed': 640651446,
                    'state_last_action': True,
                    'state_timestep_number': False,
                    'step_mul': 8},
    'epsilon_anneal_time': 50000,
    'epsilon_finish': 0.05,
    'epsilon_start': 1.0,
    'evaluate': False,
    'gamma': 0.99,
    'grad_norm_clip': 10,
    'hypernet_embed': 64,
    'hypernet_layers': 2,
    'label': 'default_label',
    'learner': 'q_learner',
    'learner_log_interval': 10000,
    'load_step': 0,
    'local_results_path': 'results',
    'log_interval': 10000,
    'lr': 0.0005,
    'mac': 'basic_mac',
    'mixer': 'qmix',
    'mixing_embed_dim': 32,
    'name': 'qmix',
    'obs_agent_id': True,
    'obs_last_action': True,
    'optim_alpha': 0.99,
    'optim_eps': 1e-05,
    'repeat_id': 1,
    'rnn_hidden_dim': 64,
    'runner': 'episode',
    'runner_log_interval': 10000,
    'save_model': False,
    'save_model_interval': 2000000,
    'save_replay': False,
    'seed': 640651446,
    't_max': 2050000,
    'target_update_interval': 200,
    'test_greedy': True,
    'test_interval': 10000,
    'test_nepisode': 32,
    'use_cuda': False,
    'use_tensorboard': False}

[INFO 19:19:09] my_main Beginning training for 2050000 timesteps
[INFO 19:19:09] absl Launching SC2: /Applications/StarCraft II/Versions/Base86383/SC2.app/Contents/MacOS/SC2 -listen 127.0.0.1 -port 20968 -dataDir /Applications/StarCraft II/ -tempDir /var/folders/vf/zsfcj3cj00543yqcgjy0409w0000gn/T/sc-04d9ro89/ -displayMode 0 -windowwidth 1920 -windowheight 1200 -windowx 50 -windowy 50
[INFO 19:19:09] absl Connecting to: ws://127.0.0.1:20968/sc2api, attempt: 0, running: True
[INFO 19:19:10] absl Connecting to: ws://127.0.0.1:20968/sc2api, attempt: 1, running: True
[INFO 19:19:11] absl Connecting to: ws://127.0.0.1:20968/sc2api, attempt: 2, running: True
[INFO 19:19:12] absl Connecting to: ws://127.0.0.1:20968/sc2api, attempt: 3, running: True
[INFO 19:19:13] absl Connecting to: ws://127.0.0.1:20968/sc2api, attempt: 4, running: True
[INFO 19:19:14] absl Connecting to: ws://127.0.0.1:20968/sc2api, attempt: 5, running: True
[INFO 19:19:15] absl Connecting to: ws://127.0.0.1:20968/sc2api, attempt: 6, running: True
[INFO 19:19:16] absl Connecting to: ws://127.0.0.1:20968/sc2api, attempt: 7, running: True
[INFO 19:19:17] absl Connecting to: ws://127.0.0.1:20968/sc2api, attempt: 8, running: True
[INFO 19:19:18] absl Connecting to: ws://127.0.0.1:20968/sc2api, attempt: 9, running: True
[INFO 19:19:19] absl Connecting to: ws://127.0.0.1:20968/sc2api, attempt: 10, running: True
/Users/alexrutherford/repos/pymarl/src/components/episode_buffer.py:119: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /Users/runner/miniforge3/conda-bld/pytorch-recipe_1643121251270/work/torch/csrc/utils/tensor_new.cpp:201.)
  v = th.tensor(v, dtype=dtype, device=self.device)
/Users/alexrutherford/repos/pymarl/src/components/episode_buffer.py:119: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  v = th.tensor(v, dtype=dtype, device=self.device)
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
[INFO 19:19:26] my_main t_env: 52 / 2050000
[INFO 19:19:26] my_main Estimated time left: 58 minutes, 42 seconds. Time passed: 17 seconds
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
rewards shape torch.Size([32, 64, 1]), shape 2 torch.Size([64, 1]) tensor([[0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.3529],
        [0.1569],
        [0.1569],
        [0.0000],
        [0.1569],
        [0.0000],
        [0.0000],
        [0.2549],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.2549],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.3529],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.2549],
        [0.0000],
        [0.0000],
        [0.2549],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.2353],
        [0.2353],
        [0.1446],
        [0.0000],
        [0.0000],
        [0.3137],
        [0.4706],
        [0.0000],
        [0.1569],
        [0.2353],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.2353],
        [0.0000],
        [0.0000],
        [0.0025],
        [0.0196],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000]])            
actions shape torch.Size([32, 64, 5, 1]) shape 2 torch.Size([64, 5, 1])  tensor([[[ 1],
         [ 3],
         [ 3],
         [ 2],
         [ 3]],

        [[ 2],
         [ 2],
         [ 3],
         [ 1],
         [ 5]],

        [[ 3],
         [ 2],
         [ 1],
         [ 4],
         [ 5]],

        [[ 1],
         [ 1],
         [ 4],
         [ 2],
         [ 4]],

        [[ 1],
         [ 1],
         [ 4],
         [ 1],
         [ 4]],

        [[ 4],
         [ 1],
         [ 2],
         [ 3],
         [ 2]],

        [[ 9],
         [ 5],
         [ 1],
         [ 7],
         [ 2]],

        [[ 5],
         [ 5],
         [ 3],
         [10],
         [ 2]],

        [[ 3],
         [ 1],
         [ 5],
         [ 6],
         [ 8]],

        [[ 3],
         [ 3],
         [ 5],
         [ 3],
         [ 7]],

        [[ 4],
         [ 3],
         [ 2],
         [ 9],
         [10]],

        [[ 2],
         [ 3],
         [ 3],
         [ 9],
         [ 1]],

        [[ 2],
         [ 2],
         [ 5],
         [ 2],
         [10]],

        [[ 6],
         [ 5],
         [ 5],
         [ 2],
         [ 6]],

        [[ 2],
         [ 2],
         [ 5],
         [ 2],
         [ 9]],

        [[ 3],
         [ 1],
         [ 2],
         [ 6],
         [ 6]],

        [[ 2],
         [ 1],
         [ 2],
         [ 3],
         [ 5]],

        [[ 4],
         [ 3],
         [ 1],
         [ 3],
         [ 4]],

        [[ 8],
         [ 4],
         [ 3],
         [ 3],
         [ 6]],

        [[ 9],
         [ 1],
         [ 2],
         [ 4],
         [ 3]],

        [[ 3],
         [ 1],
         [ 5],
         [ 8],
         [ 6]],

        [[ 5],
         [ 2],
         [ 4],
         [ 6],
         [ 0]],

        [[ 9],
         [ 1],
         [ 1],
         [ 5],
         [ 0]],

        [[ 2],
         [ 1],
         [ 5],
         [ 2],
         [ 0]],

        [[ 5],
         [ 5],
         [ 3],
         [ 3],
         [ 0]],

        [[ 3],
         [ 2],
         [ 3],
         [ 3],
         [ 0]],

        [[ 7],
         [ 5],
         [ 2],
         [ 2],
         [ 0]],

        [[ 5],
         [ 5],
         [ 4],
         [ 1],
         [ 0]],

        [[ 5],
         [ 4],
         [ 5],
         [ 0],
         [ 0]],

        [[ 3],
         [ 5],
         [ 4],
         [ 0],
         [ 0]],

        [[ 7],
         [ 3],
         [ 4],
         [ 0],
         [ 0]],

        [[ 5],
         [ 4],
         [ 4],
         [ 0],
         [ 0]],

        [[ 8],
         [ 1],
         [ 6],
         [ 0],
         [ 0]],

        [[ 1],
         [ 4],
         [ 4],
         [ 0],
         [ 0]],

        [[ 4],
         [ 8],
         [ 9],
         [ 0],
         [ 0]],

        [[ 8],
         [ 3],
         [ 4],
         [ 0],
         [ 0]],

        [[ 8],
         [ 7],
         [ 6],
         [ 0],
         [ 0]],

        [[ 8],
         [ 2],
         [ 4],
         [ 0],
         [ 0]],

        [[ 2],
         [ 1],
         [ 4],
         [ 0],
         [ 0]],

        [[ 6],
         [ 8],
         [ 6],
         [ 0],
         [ 0]],

        [[ 1],
         [ 5],
         [ 1],
         [ 0],
         [ 0]],

        [[ 0],
         [ 7],
         [ 4],
         [ 0],
         [ 0]],

        [[ 0],
         [ 3],
         [ 9],
         [ 0],
         [ 0]],

        [[ 0],
         [ 8],
         [ 3],
         [ 0],
         [ 0]],

        [[ 0],
         [ 2],
         [ 2],
         [ 0],
         [ 0]],

        [[ 0],
         [ 1],
         [ 5],
         [ 0],
         [ 0]],

        [[ 0],
         [ 1],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 8],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 4],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 7],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 4],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 5],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 0],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 0],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 0],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 0],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 0],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 0],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 0],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 0],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 0],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 0],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 0],
         [ 0],
         [ 0],
         [ 0]],

        [[ 0],
         [ 0],
         [ 0],
         [ 0],
         [ 0]]])             
 mask shape torch.Size([32, 64, 1]) shape 2 torch.Size([64, 1])  tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]])
chosen act qvals shape torch.Size([32, 64, 5]) shape 2 torch.Size([64, 5]) tensor([[ 0.1326, -0.0837, -0.0795, -0.1446, -0.0708],
        [-0.1382, -0.1183, -0.0849,  0.1538, -0.0310],
        [-0.0586, -0.0997,  0.1792,  0.0793, -0.0535],
        [ 0.2023,  0.1929,  0.0614, -0.1518,  0.1158],
        [ 0.2196,  0.2079,  0.0650,  0.2115,  0.0799],
        [ 0.1205,  0.2206, -0.1959, -0.0864, -0.1864],
        [ 0.0132, -0.0099,  0.2324,  0.0577, -0.1947],
        [-0.0239, -0.0266, -0.0721,  0.1730, -0.2126],
        [-0.0169,  0.2650, -0.0617, -0.0205,  0.0608],
        [-0.0110, -0.0740, -0.0474, -0.0745,  0.0349],
        [ 0.1174, -0.0416, -0.2923,  0.0611,  0.1605],
        [-0.1931, -0.0193, -0.0277,  0.0517,  0.2003],
        [-0.1887, -0.1953, -0.0696, -0.1907,  0.1660],
        [ 0.0469,  0.0036, -0.0573, -0.1369, -0.0399],
        [-0.1833, -0.1691, -0.0516, -0.1080,  0.0960],
        [-0.0346,  0.2486, -0.2355,  0.0137, -0.0042],
        [-0.1712,  0.2514, -0.2010, -0.0963, -0.0323],
        [ 0.1373, -0.0420,  0.2203, -0.0866,  0.0951],
        [ 0.0509,  0.1078, -0.0458, -0.0764,  0.0101],
        [-0.0080,  0.2408, -0.2058,  0.0515, -0.0515],
        [-0.0973,  0.2421, -0.0023,  0.1127,  0.0375],
        [-0.0521, -0.1758,  0.0236,  0.0298, -0.0630],
        [ 0.0048,  0.2255,  0.1250, -0.0344, -0.0827],
        [-0.1156,  0.2290,  0.0106, -0.1597, -0.0943],
        [-0.0286,  0.0040, -0.0610, -0.0527, -0.1004],
        [-0.0776, -0.1798, -0.0450, -0.0756, -0.1033],
        [ 0.0905,  0.0226, -0.1932, -0.1425, -0.1046],
        [ 0.0025,  0.0271,  0.0571,  0.1740, -0.1051],
        [ 0.0417,  0.1007, -0.0154, -0.0802, -0.1052],
        [-0.0524,  0.0235,  0.0107, -0.0940, -0.1052],
        [ 0.0854, -0.0491,  0.0042, -0.1025, -0.1052],
        [ 0.0511,  0.0726,  0.0167, -0.1070, -0.1051],
        [-0.0022,  0.2244,  0.0004, -0.1092, -0.1051],
        [ 0.2408,  0.0922,  0.0397, -0.1100, -0.1050],
        [ 0.1395,  0.0540,  0.1147, -0.1103, -0.1050],
        [-0.0184, -0.0715,  0.0314, -0.1103, -0.1050],
        [-0.0162,  0.0997,  0.0208, -0.1102, -0.1050],
        [-0.0140, -0.1314,  0.0540, -0.1101, -0.1050],
        [-0.1288,  0.1966,  0.0526, -0.1100, -0.1050],
        [ 0.0620,  0.0430,  0.0223, -0.1100, -0.1050],
        [ 0.2328,  0.0137,  0.1772, -0.1099, -0.1050],
        [-0.0577,  0.1078,  0.0598, -0.1099, -0.1050],
        [-0.0734, -0.0827,  0.1175, -0.1099, -0.1050],
        [-0.0823,  0.0740, -0.0820, -0.1099, -0.1050],
        [-0.0872, -0.1097, -0.2116, -0.1099, -0.1050],
        [-0.0899,  0.1815, -0.0470, -0.1099, -0.1050],
        [-0.0915,  0.1712, -0.0950, -0.1099, -0.1050],
        [-0.0924,  0.0790, -0.0991, -0.1099, -0.1050],
        [-0.0930,  0.0657, -0.1003, -0.1099, -0.1050],
        [-0.0933,  0.1352, -0.0998, -0.1098, -0.1050],
        [-0.0935,  0.0565, -0.0985, -0.1098, -0.1050],
        [-0.0936,  0.0189, -0.0972, -0.1098, -0.1050],
        [-0.0937, -0.0684, -0.0961, -0.1098, -0.1050],
        [-0.0937, -0.0846, -0.0953, -0.1098, -0.1050],
        [-0.0916, -0.0832, -0.0848, -0.1025, -0.1028],
        [-0.0932, -0.0838, -0.0818, -0.1017, -0.1041],
        [-0.0959, -0.0847, -0.0817, -0.1031, -0.1062],
        [-0.0984, -0.0856, -0.0825, -0.1048, -0.1081],
        [-0.1004, -0.0862, -0.0834, -0.1063, -0.1095],
        [-0.1018, -0.0866, -0.0842, -0.1074, -0.1105],
        [-0.1027, -0.0869, -0.0848, -0.1081, -0.1111],
        [-0.1033, -0.0870, -0.0851, -0.1086, -0.1115],
        [-0.1037, -0.0871, -0.0854, -0.1089, -0.1118],
        [-0.1039, -0.0871, -0.0855, -0.1090, -0.1119]],
       grad_fn=<SelectBackward0>)
target_mac_out pre  torch.Size([32, 64, 5, 11]) shape 2 torch.Size([64, 5, 11]) tensor([[[-0.1230,  0.1708, -0.1382,  ...,  0.0595,  0.0230,  0.0988],
         [-0.1088,  0.1688, -0.1183,  ...,  0.1087,  0.0434,  0.0916],
         [-0.1387,  0.1542, -0.1604,  ...,  0.0926,  0.0308,  0.1115],
         [-0.1329,  0.1538, -0.1451,  ...,  0.0741,  0.0177,  0.1316],
         [-0.1227,  0.1791, -0.1531,  ...,  0.0761,  0.0588,  0.1074]],

        [[-0.1253,  0.1908, -0.1291,  ...,  0.0659,  0.0124,  0.1068],
         [-0.1080,  0.1866, -0.0997,  ...,  0.1109,  0.0370,  0.1036],
         [-0.1452,  0.1792, -0.1646,  ...,  0.1017,  0.0311,  0.1154],
         [-0.1436,  0.1730, -0.1548,  ...,  0.0689,  0.0108,  0.1335],
         [-0.1262,  0.2174, -0.1650,  ...,  0.0736,  0.0596,  0.1126]],

        [[-0.1179,  0.2023, -0.1330,  ...,  0.0732,  0.0211,  0.1111],
         [-0.1049,  0.1929, -0.0896,  ...,  0.1140,  0.0388,  0.1118],
         [-0.1522,  0.1956, -0.1670,  ...,  0.0961,  0.0313,  0.1241],
         [-0.1240,  0.1902, -0.1518,  ...,  0.0963, -0.0080,  0.1469],
         [-0.1331,  0.2437, -0.1744,  ...,  0.0660,  0.0645,  0.1202]],

        ...,

        [[-0.1037,  0.1477, -0.1101,  ...,  0.1266,  0.0232,  0.0891],
         [-0.0871,  0.1487, -0.0764,  ...,  0.1663,  0.0056,  0.0598],
         [-0.0854,  0.1395, -0.1220,  ...,  0.1467,  0.0277,  0.0890],
         [-0.1089,  0.1177, -0.1057,  ...,  0.1618,  0.0073,  0.0791],
         [-0.1118,  0.1393, -0.1070,  ...,  0.1271,  0.0355,  0.0678]],

        [[-0.1039,  0.1477, -0.1102,  ...,  0.1265,  0.0233,  0.0890],
         [-0.0871,  0.1486, -0.0765,  ...,  0.1663,  0.0057,  0.0598],
         [-0.0855,  0.1395, -0.1221,  ...,  0.1466,  0.0278,  0.0890],
         [-0.1090,  0.1176, -0.1057,  ...,  0.1618,  0.0073,  0.0791],
         [-0.1119,  0.1393, -0.1071,  ...,  0.1270,  0.0356,  0.0677]],

        [[-0.1040,  0.1477, -0.1102,  ...,  0.1265,  0.0233,  0.0890],
         [-0.0871,  0.1486, -0.0766,  ...,  0.1662,  0.0058,  0.0598],
         [-0.0856,  0.1395, -0.1222,  ...,  0.1465,  0.0278,  0.0890],
         [-0.1091,  0.1175, -0.1057,  ...,  0.1617,  0.0074,  0.0791],
         [-0.1120,  0.1393, -0.1071,  ...,  0.1270,  0.0356,  0.0677]]],
       grad_fn=<SelectBackward0>)
avial actions shape torch.Size([32, 65, 5, 11]) shape 2 torch.Size([65, 5, 11]) tensor([[[0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0]],

        [[0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0]],

        [[0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0]],

        ...,

        [[0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0]],

        [[0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0]],

        [[0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0]]], dtype=torch.int32)
target_mac_out post  tensor([[[-1.0000e+07,  1.7085e-01, -1.3818e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07,  1.6876e-01, -1.1826e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07,  1.5419e-01, -1.6044e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07,  1.5379e-01, -1.4509e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07,  1.7907e-01, -1.5308e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07]],

        [[-1.0000e+07,  1.9084e-01, -1.2914e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07,  1.8656e-01, -9.9696e-02,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07,  1.7916e-01, -1.6458e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07,  1.7300e-01, -1.5484e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07,  2.1737e-01, -1.6503e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07]],

        [[-1.0000e+07,  2.0234e-01, -1.3296e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07,  1.9286e-01, -8.9594e-02,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07,  1.9560e-01, -1.6702e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07,  1.9022e-01, -1.5185e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07,  2.4375e-01, -1.7441e-01,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07]],

        ...,

        [[-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07]],

        [[-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07]],

        [[-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07],
         [-1.0000e+07, -1.0000e+07, -1.0000e+07,  ..., -1.0000e+07,
          -1.0000e+07, -1.0000e+07]]], grad_fn=<SelectBackward0>)
cur max actions tensor([[[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [1]],

        [[1],
         [1],
         [1],
         [1],
         [0]],

        [[1],
         [1],
         [1],
         [1],
         [0]],

        [[1],
         [1],
         [1],
         [1],
         [0]],

        [[1],
         [1],
         [1],
         [1],
         [0]],

        [[1],
         [1],
         [1],
         [1],
         [0]],

        [[1],
         [1],
         [1],
         [1],
         [0]],

        [[1],
         [1],
         [1],
         [1],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[1],
         [1],
         [1],
         [0],
         [0]],

        [[0],
         [1],
         [1],
         [0],
         [0]],

        [[0],
         [1],
         [1],
         [0],
         [0]],

        [[0],
         [1],
         [1],
         [0],
         [0]],

        [[0],
         [1],
         [1],
         [0],
         [0]],

        [[0],
         [1],
         [1],
         [0],
         [0]],

        [[0],
         [1],
         [0],
         [0],
         [0]],

        [[0],
         [1],
         [0],
         [0],
         [0]],

        [[0],
         [1],
         [0],
         [0],
         [0]],

        [[0],
         [1],
         [0],
         [0],
         [0]],

        [[0],
         [1],
         [0],
         [0],
         [0]],

        [[0],
         [1],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]],

        [[0],
         [0],
         [0],
         [0],
         [0]]])
target max qvals tensor([[ 1.7085e-01,  1.6876e-01,  1.5419e-01,  1.5379e-01,  1.7907e-01],
        [ 1.9084e-01,  1.8656e-01,  1.7916e-01,  1.7300e-01,  2.1737e-01],
        [ 2.0234e-01,  1.9286e-01,  1.9560e-01,  1.9022e-01,  2.4375e-01],
        [ 2.1956e-01,  2.0789e-01,  2.0376e-01,  2.1148e-01,  2.4509e-01],
        [ 2.4242e-01,  2.2063e-01,  2.2170e-01,  2.2197e-01,  2.5248e-01],
        [ 2.6478e-01,  2.3015e-01,  2.3242e-01,  2.1021e-01,  2.4380e-01],
        [ 2.7805e-01,  2.5151e-01,  2.2837e-01,  2.0278e-01,  2.2575e-01],
        [ 2.8987e-01,  2.6499e-01,  2.2068e-01,  2.0363e-01,  2.1813e-01],
        [ 3.0505e-01,  2.5916e-01,  2.4331e-01,  2.0953e-01,  2.2372e-01],
        [ 3.2342e-01,  2.6901e-01,  2.6431e-01,  2.0632e-01,  2.1578e-01],
        [ 3.0590e-01,  2.8261e-01,  2.6276e-01,  1.9855e-01,  2.0029e-01],
        [ 3.1082e-01,  3.0137e-01,  2.5666e-01,  1.9757e-01,  2.0798e-01],
        [ 3.0008e-01,  3.0505e-01,  2.6465e-01,  2.0386e-01,  1.9557e-01],
        [ 2.9888e-01,  2.7574e-01,  2.5969e-01,  2.0354e-01,  2.0267e-01],
        [ 2.8684e-01,  2.4861e-01,  2.4543e-01,  2.0307e-01,  1.9595e-01],
        [ 2.8733e-01,  2.5143e-01,  2.3085e-01,  2.0803e-01,  2.0578e-01],
        [ 2.7880e-01,  2.4185e-01,  2.2028e-01,  2.0564e-01,  2.1117e-01],
        [ 2.6574e-01,  2.3919e-01,  1.7632e-01,  2.0559e-01,  2.1830e-01],
        [ 2.6662e-01,  2.4084e-01,  1.4670e-01,  2.0988e-01,  2.2353e-01],
        [ 2.5039e-01,  2.4213e-01,  1.3446e-01,  2.1748e-01,  2.2045e-01],
        [ 2.4143e-01,  2.2068e-01,  1.3186e-01,  2.1290e-01, -6.3017e-02],
        [ 2.3650e-01,  2.2551e-01,  1.2496e-01,  1.9874e-01, -8.2705e-02],
        [ 2.2420e-01,  2.2904e-01,  1.2992e-01,  1.9488e-01, -9.4265e-02],
        [ 2.1466e-01,  2.2924e-01,  1.3040e-01,  1.8601e-01, -1.0036e-01],
        [ 2.2410e-01,  2.4872e-01,  1.5797e-01,  1.7727e-01, -1.0329e-01],
        [ 2.2435e-01,  2.2796e-01,  1.7258e-01,  1.7456e-01, -1.0458e-01],
        [ 2.1820e-01,  2.3301e-01,  1.8313e-01,  1.7403e-01, -1.0508e-01],
        [ 2.3663e-01,  2.3131e-01,  1.9193e-01, -8.0194e-02, -1.0522e-01],
        [ 2.4447e-01,  2.1923e-01,  2.0973e-01, -9.4020e-02, -1.0522e-01],
        [ 2.4666e-01,  2.3142e-01,  2.0333e-01, -1.0248e-01, -1.0518e-01],
        [ 2.4045e-01,  2.2528e-01,  1.9217e-01, -1.0701e-01, -1.0513e-01],
        [ 2.4241e-01,  2.2439e-01,  1.8367e-01, -1.0916e-01, -1.0508e-01],
        [ 2.4079e-01,  2.1852e-01,  1.8781e-01, -1.1004e-01, -1.0504e-01],
        [ 2.3753e-01,  2.1308e-01,  1.8553e-01, -1.1029e-01, -1.0502e-01],
        [ 2.3004e-01,  2.1558e-01,  1.8116e-01, -1.1029e-01, -1.0500e-01],
        [ 2.3307e-01,  2.1016e-01,  1.7752e-01, -1.1021e-01, -1.0498e-01],
        [ 2.3489e-01,  2.0230e-01,  1.8200e-01, -1.1011e-01, -1.0497e-01],
        [ 2.3717e-01,  1.9664e-01,  1.7560e-01, -1.1003e-01, -1.0497e-01],
        [ 2.2755e-01,  1.9276e-01,  1.7178e-01, -1.0997e-01, -1.0496e-01],
        [ 2.3285e-01,  2.0072e-01,  1.7723e-01, -1.0993e-01, -1.0496e-01],
        [-5.7662e-02,  1.9982e-01,  1.6679e-01, -1.0990e-01, -1.0496e-01],
        [-7.3427e-02,  1.8848e-01,  1.5858e-01, -1.0988e-01, -1.0496e-01],
        [-8.2257e-02,  1.8712e-01,  1.5919e-01, -1.0987e-01, -1.0495e-01],
        [-8.7168e-02,  1.8840e-01,  1.5830e-01, -1.0986e-01, -1.0495e-01],
        [-8.9920e-02,  1.8155e-01,  1.6487e-01, -1.0986e-01, -1.0495e-01],
        [-9.1495e-02,  1.7117e-01, -9.4950e-02, -1.0985e-01, -1.0495e-01],
        [-9.2420e-02,  1.6189e-01, -9.9079e-02, -1.0985e-01, -1.0495e-01],
        [-9.2974e-02,  1.6377e-01, -1.0030e-01, -1.0985e-01, -1.0495e-01],
        [-9.3309e-02,  1.6214e-01, -9.9767e-02, -1.0985e-01, -1.0495e-01],
        [-9.3509e-02,  1.5966e-01, -9.8519e-02, -1.0985e-01, -1.0495e-01],
        [-9.3627e-02,  1.6477e-01, -9.7204e-02, -1.0985e-01, -1.0495e-01],
        [-9.3693e-02, -6.8370e-02, -9.6104e-02, -1.0985e-01, -1.0495e-01],
        [-1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07],
        [-1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07],
        [-1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07],
        [-1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07],
        [-1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07],
        [-1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07],
        [-1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07],
        [-1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07],
        [-1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07],
        [-1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07],
        [-1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07],
        [-1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07, -1.0000e+07]],
       grad_fn=<SelectBackward0>)
chosen_action_qvals shape torch.Size([32, 64, 1]) , tensor([[0.5409],
        [0.3626],
        [0.6856],
        [0.7884],
        [0.8831],
        [0.6922],
        [0.7366],
        [0.5079],
        [0.7264],
        [0.6611],
        [0.7526],
        [0.7029],
        [0.5557],
        [0.5806],
        [0.4747],
        [0.7119],
        [0.6811],
        [0.7603],
        [0.7227],
        [0.4771],
        [0.7246],
        [0.4373],
        [0.7467],
        [0.5592],
        [0.5242],
        [0.5500],
        [0.4963],
        [0.5212],
        [0.6471],
        [0.4904],
        [0.5865],
        [0.5116],
        [0.4620],
        [0.5104],
        [0.4591],
        [0.3648],
        [0.3423],
        [0.2498],
        [0.3321],
        [0.3590],
        [0.4431],
        [0.3122],
        [0.2702],
        [0.2317],
        [0.1477],
        [0.2952],
        [0.2615],
        [0.3135],
        [0.2993],
        [0.2179],
        [0.2362],
        [0.1808],
        [0.2676],
        [0.1061],
        [0.1094],
        [0.1095],
        [0.1086],
        [0.1076],
        [0.1068],
        [0.1062],
        [0.1058],
        [0.1055],
        [0.1053],
        [0.1053]], grad_fn=<SelectBackward0>)
target_max_qvals shape torch.Size([32, 64, 1]) , tensor([[ 0.7051],
        [ 1.0092],
        [ 0.9858],
        [ 0.9887],
        [ 1.1537],
        [ 1.1297],
        [ 0.9945],
        [ 1.0937],
        [ 1.1946],
        [ 1.2621],
        [ 1.0991],
        [ 1.1263],
        [ 1.1213],
        [ 1.0636],
        [ 1.0908],
        [ 1.1655],
        [ 1.0443],
        [ 1.0626],
        [ 0.8899],
        [ 0.9863],
        [ 0.7955],
        [ 0.9288],
        [ 0.8247],
        [ 0.8450],
        [ 1.0139],
        [ 0.9136],
        [ 0.6706],
        [ 0.8493],
        [ 0.7371],
        [ 0.8030],
        [ 0.6820],
        [ 0.6431],
        [ 0.6029],
        [ 0.5633],
        [ 0.5890],
        [ 0.5136],
        [ 0.4841],
        [ 0.5287],
        [ 0.5182],
        [ 0.4951],
        [ 0.3532],
        [ 0.3329],
        [ 0.3143],
        [ 0.3256],
        [ 0.3508],
        [ 0.2615],
        [ 0.3257],
        [ 0.3147],
        [ 0.2223],
        [ 0.2519],
        [ 0.2039],
        [ 0.2676],
        [-1.8544],
        [-1.8544],
        [-1.8544],
        [-1.8544],
        [-1.8544],
        [-1.8544],
        [-1.8544],
        [-1.8544],
        [-1.8544],
        [-1.8544],
        [-1.8544],
        [-1.8544]], grad_fn=<SelectBackward0>)
targets - shape torch.Size([32, 64, 1]) shape 2 torch.Size([64, 1]) tensor([[ 0.6981],
        [ 0.9991],
        [ 0.9759],
        [ 0.9788],
        [ 1.1421],
        [ 1.1184],
        [ 0.9845],
        [ 1.4357],
        [ 1.3395],
        [ 1.4063],
        [ 1.0881],
        [ 1.2719],
        [ 1.1101],
        [ 1.0529],
        [ 1.3348],
        [ 1.1538],
        [ 1.0339],
        [ 1.0520],
        [ 0.8810],
        [ 1.2314],
        [ 0.7875],
        [ 0.9195],
        [ 0.8164],
        [ 1.1894],
        [ 1.0038],
        [ 0.9044],
        [ 0.6639],
        [ 1.0957],
        [ 0.7297],
        [ 0.7950],
        [ 0.9301],
        [ 0.6367],
        [ 0.5969],
        [ 0.5577],
        [ 0.8184],
        [ 0.7437],
        [ 0.6239],
        [ 0.5234],
        [ 0.5130],
        [ 0.8038],
        [ 0.8203],
        [ 0.3296],
        [ 0.4681],
        [ 0.5576],
        [ 0.3473],
        [ 0.2589],
        [ 0.3225],
        [ 0.5469],
        [ 0.2200],
        [ 0.2494],
        [ 0.2043],
        [ 0.0196],
        [-1.8358],
        [-1.8358],
        [-1.8358],
        [-1.8358],
        [-1.8358],
        [-1.8358],
        [-1.8358],
        [-1.8358],
        [-1.8358],
        [-1.8358],
        [-1.8358],
        [-1.8358]], grad_fn=<SelectBackward0>)
tensor([[-0.1571],
        [-0.6365],
        [-0.2903],
        [-0.1904],
        [-0.2591],
        [-0.4262],
        [-0.2479],
        [-0.9278],
        [-0.6132],
        [-0.7452],
        [-0.3355],
        [-0.5689],
        [-0.5544],
        [-0.4723],
        [-0.8600],
        [-0.4419],
        [-0.3527],
        [-0.2917],
        [-0.1583],
        [-0.7543],
        [-0.0629],
        [-0.4822],
        [-0.0697],
        [-0.6302],
        [-0.4796],
        [-0.3544],
        [-0.1676],
        [-0.5745],
        [-0.0826],
        [-0.3046],
        [-0.3436],
        [-0.1251],
        [-0.1348],
        [-0.0473],
        [-0.3592],
        [-0.3790],
        [-0.2815],
        [-0.2736],
        [-0.1810],
        [-0.4449],
        [-0.3772],
        [-0.0174],
        [-0.1979],
        [-0.3259],
        [-0.1996],
        [ 0.0363],
        [-0.0610],
        [-0.2334],
        [ 0.0793],
        [-0.0315],
        [ 0.0318],
        [ 0.1612],
        [ 2.1034],
        [ 1.9420],
        [ 1.9452],
        [ 1.9453],
        [ 1.9445],
        [ 1.9434],
        [ 1.9426],
        [ 1.9420],
        [ 1.9416],
        [ 1.9413],
        [ 1.9412],
        [ 1.9411]], grad_fn=<SelectBackward0>)
