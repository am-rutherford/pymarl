[INFO 14:21:03] pymarl Running command 'my_main'
[INFO 14:21:03] pymarl Started run with ID "119"
[DEBUG 14:21:03] pymarl Starting Heartbeat
[DEBUG 14:21:03] my_main Started
[WARNING 14:21:03] my_main CUDA flag use_cuda was switched OFF automatically because no CUDA devices are available!
[INFO 14:21:03] my_main Experiment Parameters:
[INFO 14:21:03] my_main 

{   'action_selector': 'epsilon_greedy',
    'agent': 'rnn',
    'agent_output_type': 'q',
    'batch_size': 32,
    'batch_size_run': 1,
    'buffer_cpu_only': True,
    'buffer_size': 5000,
    'checkpoint_path': '',
    'critic_lr': 0.0005,
    'double_q': True,
    'env': 'sc2',
    'env_args': {   'continuing_episode': False,
                    'debug': False,
                    'difficulty': '7',
                    'game_version': None,
                    'heuristic_ai': False,
                    'heuristic_rest': False,
                    'map_name': '2s3z',
                    'move_amount': 2,
                    'obs_all_health': True,
                    'obs_instead_of_state': False,
                    'obs_last_action': False,
                    'obs_own_health': True,
                    'obs_pathing_grid': False,
                    'obs_terrain_height': False,
                    'obs_timestep_number': False,
                    'replay_dir': '',
                    'replay_prefix': '',
                    'reward_death_value': 10,
                    'reward_defeat': 0,
                    'reward_negative_scale': 0.5,
                    'reward_only_positive': True,
                    'reward_scale': True,
                    'reward_scale_rate': 20,
                    'reward_sparse': False,
                    'reward_win': 200,
                    'seed': 381992559,
                    'state_last_action': True,
                    'state_timestep_number': False,
                    'step_mul': 8},
    'epsilon_anneal_time': 50000,
    'epsilon_finish': 0.05,
    'epsilon_start': 1.0,
    'evaluate': False,
    'gamma': 0.99,
    'grad_norm_clip': 10,
    'hypernet_embed': 64,
    'hypernet_layers': 2,
    'label': 'default_label',
    'learner': 'q_learner',
    'learner_log_interval': 10000,
    'load_step': 0,
    'local_results_path': 'results',
    'log_interval': 10000,
    'lr': 0.0005,
    'mac': 'basic_mac',
    'mixer': 'qmix',
    'mixing_embed_dim': 32,
    'name': 'qmix',
    'obs_agent_id': True,
    'obs_last_action': True,
    'optim_alpha': 0.99,
    'optim_eps': 1e-05,
    'repeat_id': 1,
    'rnn_hidden_dim': 64,
    'runner': 'episode',
    'runner_log_interval': 10000,
    'save_model': False,
    'save_model_interval': 2000000,
    'save_replay': False,
    'seed': 381992559,
    't_max': 2050000,
    'target_update_interval': 200,
    'test_greedy': True,
    'test_interval': 10000,
    'test_nepisode': 32,
    'use_cuda': False,
    'use_tensorboard': False}

[INFO 14:21:04] my_main Beginning training for 2050000 timesteps
[INFO 14:21:04] absl Launching SC2: /Applications/StarCraft II/Versions/Base86383/SC2.app/Contents/MacOS/SC2 -listen 127.0.0.1 -port 18663 -dataDir /Applications/StarCraft II/ -tempDir /var/folders/vf/zsfcj3cj00543yqcgjy0409w0000gn/T/sc-_74ve4b3/ -displayMode 0 -windowwidth 1920 -windowheight 1200 -windowx 50 -windowy 50
[INFO 14:21:04] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 0, running: True
[INFO 14:21:05] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 1, running: True
[INFO 14:21:06] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 2, running: True
[INFO 14:21:07] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 3, running: True
[INFO 14:21:08] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 4, running: True
[INFO 14:21:09] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 5, running: True
[INFO 14:21:10] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 6, running: True
[INFO 14:21:11] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 7, running: True
[INFO 14:21:12] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 8, running: True
[INFO 14:21:13] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 9, running: True
[INFO 14:21:14] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 10, running: True
[INFO 14:21:15] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 11, running: True
[INFO 14:21:16] absl Connecting to: ws://127.0.0.1:18663/sc2api, attempt: 12, running: True
/Users/alexrutherford/repos/pymarl/src/components/episode_buffer.py:119: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /Users/runner/miniforge3/conda-bld/pytorch-recipe_1643121251270/work/torch/csrc/utils/tensor_new.cpp:201.)
  v = th.tensor(v, dtype=dtype, device=self.device)
/Users/alexrutherford/repos/pymarl/src/components/episode_buffer.py:119: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  v = th.tensor(v, dtype=dtype, device=self.device)
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
[INFO 14:21:23] my_main t_env: 92 / 2050000
[INFO 14:21:23] my_main Estimated time left: 1 hours, 6 minutes, 19 seconds. Time passed: 19 seconds
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 4, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 4, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 4, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 4, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 1}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
env info  {'battle_won': False, 'dead_allies': 5, 'dead_enemies': 0}
ep batch EpisodeBatch. Batch Size:1 Max_seq_len:121 Keys:dict_keys(['state', 'obs', 'actions', 'avail_actions', 'reward', 'terminated', 'actions_onehot', 'filled']) Groups:dict_keys(['agents'])
max ep t tensor([93])
rewards tensor([[0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.2549],
        [0.0000],
        [0.3137],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.5686],
        [0.2549],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.2549],
        [0.2353],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.2549],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.2549],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.0000],
        [0.2549],
        [0.0000],
        [0.0000],
        [0.0074],
        [0.0196],
        [0.0196],
        [0.0196],
        [0.0221],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0417],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0588],
        [0.0564],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392],
        [0.0392]])
actions tensor([[[4],
         [1],
         [5],
         [1],
         [3]],

        [[5],
         [4],
         [2],
         [1],
         [4]],

        [[1],
         [3],
         [5],
         [5],
         [4]],

        [[5],
         [3],
         [3],
         [1],
         [5]],

        [[1],
         [3],
         [3],
         [5],
         [4]],

        [[1],
         [1],
         [1],
         [5],
         [3]],

        [[4],
         [2],
         [5],
         [2],
         [3]],

        [[5],
         [1],
         [3],
         [5],
         [5]],

        [[3],
         [2],
         [2],
         [2],
         [8]],

        [[3],
         [8],
         [4],
         [5],
         [5]],

        [[5],
         [5],
         [4],
         [2],
         [2]],

        [[4],
         [3],
         [8],
         [4],
         [8]],

        [[2],
         [1],
         [8],
         [2],
         [2]],

        [[1],
         [2],
         [2],
         [4],
         [9]],

        [[5],
         [2],
         [1],
         [4],
         [2]],

        [[7],
         [8],
         [8],
         [1],
         [9]],

        [[4],
         [7],
         [2],
         [2],
         [7]],

        [[1],
         [9],
         [5],
         [4],
         [0]],

        [[3],
         [7],
         [9],
         [2],
         [0]],

        [[1],
         [4],
         [1],
         [2],
         [0]],

        [[9],
         [5],
         [4],
         [4],
         [0]],

        [[4],
         [4],
         [1],
         [5],
         [0]],

        [[1],
         [8],
         [2],
         [4],
         [0]],

        [[5],
         [5],
         [3],
         [4],
         [0]],

        [[3],
         [4],
         [5],
         [1],
         [0]],

        [[2],
         [2],
         [3],
         [4],
         [0]],

        [[5],
         [9],
         [9],
         [1],
         [0]],

        [[5],
         [2],
         [3],
         [5],
         [0]],

        [[2],
         [0],
         [7],
         [4],
         [0]],

        [[2],
         [0],
         [2],
         [4],
         [0]],

        [[7],
         [0],
         [3],
         [5],
         [0]],

        [[4],
         [0],
         [2],
         [1],
         [0]],

        [[7],
         [0],
         [0],
         [5],
         [0]],

        [[8],
         [0],
         [0],
         [5],
         [0]],

        [[1],
         [0],
         [0],
         [1],
         [0]],

        [[1],
         [0],
         [0],
         [4],
         [0]],

        [[4],
         [0],
         [0],
         [3],
         [0]],

        [[5],
         [0],
         [0],
         [4],
         [0]],

        [[2],
         [0],
         [0],
         [5],
         [0]],

        [[7],
         [0],
         [0],
         [2],
         [0]],

        [[9],
         [0],
         [0],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [4],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [4],
         [0]],

        [[0],
         [0],
         [0],
         [2],
         [0]],

        [[0],
         [0],
         [0],
         [2],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [4],
         [0]],

        [[0],
         [0],
         [0],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [4],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [5],
         [0]],

        [[0],
         [0],
         [0],
         [2],
         [0]],

        [[0],
         [0],
         [0],
         [2],
         [0]],

        [[0],
         [0],
         [0],
         [4],
         [0]],

        [[0],
         [0],
         [0],
         [2],
         [0]],

        [[0],
         [0],
         [0],
         [4],
         [0]],

        [[0],
         [0],
         [0],
         [4],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [2],
         [0]],

        [[0],
         [0],
         [0],
         [2],
         [0]],

        [[0],
         [0],
         [0],
         [5],
         [0]],

        [[0],
         [0],
         [0],
         [4],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [4],
         [0]],

        [[0],
         [0],
         [0],
         [5],
         [0]],

        [[0],
         [0],
         [0],
         [2],
         [0]],

        [[0],
         [0],
         [0],
         [5],
         [0]],

        [[0],
         [0],
         [0],
         [4],
         [0]],

        [[0],
         [0],
         [0],
         [4],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [2],
         [0]],

        [[0],
         [0],
         [0],
         [5],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [2],
         [0]],

        [[0],
         [0],
         [0],
         [5],
         [0]],

        [[0],
         [0],
         [0],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [5],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [2],
         [0]],

        [[0],
         [0],
         [0],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [5],
         [0]],

        [[0],
         [0],
         [0],
         [1],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]],

        [[0],
         [0],
         [0],
         [3],
         [0]]])
mask tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]])
avial_actions tensor([[[0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0]],

        [[0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0]],

        [[0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0]],

        ...,

        [[1, 0, 0,  ..., 0, 0, 0],
         [1, 0, 0,  ..., 0, 0, 0],
         [1, 0, 0,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [1, 0, 0,  ..., 0, 0, 0]],

        [[1, 0, 0,  ..., 0, 0, 0],
         [1, 0, 0,  ..., 0, 0, 0],
         [1, 0, 0,  ..., 0, 0, 0],
         [0, 1, 1,  ..., 0, 0, 0],
         [1, 0, 0,  ..., 0, 0, 0]],

        [[1, 0, 0,  ..., 0, 0, 0],
         [1, 0, 0,  ..., 0, 0, 0],
         [1, 0, 0,  ..., 0, 0, 0],
         [1, 0, 0,  ..., 0, 0, 0],
         [1, 0, 0,  ..., 0, 0, 0]]], dtype=torch.int32)
terminated tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [1.]])
mac  tensor([[[ 0.0196,  0.0383,  0.0049,  ..., -0.0755,  0.1242, -0.0845],
         [ 0.0108,  0.0445,  0.0098,  ..., -0.0735,  0.1219, -0.0714],
         [ 0.0101,  0.0149,  0.0032,  ..., -0.1009,  0.1072, -0.0648],
         [ 0.0103,  0.0174,  0.0027,  ..., -0.1006,  0.1136, -0.0572],
         [ 0.0134,  0.0125, -0.0111,  ..., -0.0941,  0.1150, -0.0663]],

        [[ 0.1026,  0.0513, -0.0109,  ..., -0.0497,  0.1492, -0.1178],
         [ 0.0796,  0.0540,  0.0013,  ..., -0.0473,  0.1298, -0.0853],
         [ 0.0745,  0.0117, -0.0093,  ..., -0.1056,  0.1047, -0.0829],
         [ 0.0743,  0.0133, -0.0090,  ..., -0.0964,  0.1090, -0.0702],
         [ 0.0904,  0.0175, -0.0419,  ..., -0.0778,  0.1155, -0.0717]],

        [[ 0.1355,  0.0522, -0.0140,  ..., -0.0477,  0.1540, -0.1317],
         [ 0.1231,  0.0703, -0.0099,  ..., -0.0309,  0.1490, -0.0964],
         [ 0.1008,  0.0145, -0.0262,  ..., -0.1001,  0.1037, -0.0976],
         [ 0.1031,  0.0167, -0.0196,  ..., -0.0967,  0.1074, -0.0754],
         [ 0.1294,  0.0163, -0.0663,  ..., -0.0728,  0.1255, -0.0927]],

        ...,

        [[ 0.0196,  0.0452,  0.0143,  ..., -0.1318,  0.0461, -0.0515],
         [ 0.0064,  0.0534,  0.0303,  ..., -0.1078,  0.0374, -0.0325],
         [ 0.0423,  0.0609,  0.0073,  ..., -0.0955,  0.0539, -0.0589],
         [ 0.0478, -0.0307,  0.0554,  ..., -0.1301,  0.0922, -0.0888],
         [ 0.0315,  0.0608, -0.0004,  ..., -0.0974,  0.0616, -0.0434]],

        [[ 0.0196,  0.0452,  0.0143,  ..., -0.1318,  0.0461, -0.0515],
         [ 0.0064,  0.0534,  0.0303,  ..., -0.1078,  0.0374, -0.0325],
         [ 0.0423,  0.0609,  0.0073,  ..., -0.0955,  0.0539, -0.0589],
         [ 0.0304, -0.0222,  0.0758,  ..., -0.1108,  0.0704, -0.0367],
         [ 0.0315,  0.0608, -0.0004,  ..., -0.0974,  0.0616, -0.0434]],

        [[ 0.0196,  0.0452,  0.0143,  ..., -0.1318,  0.0461, -0.0515],
         [ 0.0064,  0.0534,  0.0303,  ..., -0.1078,  0.0374, -0.0325],
         [ 0.0423,  0.0609,  0.0073,  ..., -0.0955,  0.0539, -0.0589],
         [ 0.0092,  0.0074,  0.0335,  ..., -0.0954,  0.0556, -0.0084],
         [ 0.0315,  0.0608, -0.0004,  ..., -0.0974,  0.0616, -0.0434]]],
       grad_fn=<SelectBackward0>)
td error tensor([[-0.0502],
        [-0.2573],
        [ 0.0508],
        [-0.1320],
        [-0.0835],
        [ 0.1817],
        [-0.2171],
        [ 0.1526],
        [-0.3401],
        [-0.2016],
        [-0.4359],
        [-0.4886],
        [-0.0891],
        [-0.4184],
        [-0.2428],
        [-0.4671],
        [-0.7862],
        [-0.0143],
        [ 0.0321],
        [-0.2515],
        [-0.0818],
        [-0.4059],
        [-0.3972],
        [-0.1895],
        [ 0.0242],
        [-0.1622],
        [-0.4333],
        [-0.0187],
        [ 0.1384],
        [-0.1148],
        [ 0.0726],
        [-0.5245],
        [ 0.1957],
        [-0.1411],
        [-0.1466],
        [-0.0487],
        [-0.0277],
        [-0.0928],
        [ 0.1313],
        [-0.2065],
        [-0.1252],
        [ 0.0545],
        [-0.0634],
        [ 0.0122],
        [-0.1248],
        [ 0.0263],
        [-0.0846],
        [-0.0015],
        [-0.0365],
        [-0.0612],
        [-0.0773],
        [-0.1075],
        [-0.0874],
        [-0.0382],
        [-0.0051],
        [-0.1464],
        [ 0.0233],
        [-0.0552],
        [-0.0372],
        [-0.1118],
        [ 0.0126],
        [-0.1311],
        [-0.0620],
        [-0.0037],
        [-0.0672],
        [-0.0663],
        [-0.0321],
        [-0.1582],
        [ 0.0072],
        [-0.1305],
        [ 0.0321],
        [-0.0929],
        [-0.0276],
        [-0.1581],
        [-0.0620],
        [ 0.0063],
        [-0.1489],
        [ 0.0088],
        [-0.0285],
        [-0.0910],
        [-0.0641],
        [-0.0095],
        [-0.1633],
        [ 0.0536],
        [-0.0171],
        [-0.0653],
        [-0.0500],
        [-0.1517],
        [ 0.0839],
        [-0.1898],
        [ 0.0569],
        [-0.1527]], grad_fn=<SelectBackward0>)
loss tensor(0.0685, grad_fn=<DivBackward0>)
