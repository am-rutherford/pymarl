[INFO 20:40:44] pymarl Running command 'my_main'
[INFO 20:40:44] pymarl Started run with ID "353"
[DEBUG 20:40:44] my_main Started
[INFO 20:40:44] my_main Experiment Parameters:
[INFO 20:40:44] my_main 

{   'action_selector': 'epsilon_greedy',
    'agent': 'rnn',
    'agent_output_type': 'q',
    'batch_size': 32,
    'batch_size_run': 1,
    'buffer_cpu_only': True,
    'buffer_size': 5000,
    'checkpoint_path': '',
    'critic_lr': 0.0005,
    'double_q': True,
    'env': 'camas',
    'env_args': {   'agent_count': 0,
                    'congestion': True,
                    'debug': False,
                    'dummy_actions': True,
                    'episode_limit': 0,
                    'goal_reward': 30,
                    'map_name': 'supermarket-small',
                    'observation_type': 'context',
                    'ptd_mean': 1.0,
                    'ptd_var': 0.1,
                    'reward_scaling_factor': 100,
                    'reward_type': 'cost-to-go',
                    'seed': 123076537,
                    'time_multiplier': -1},
    'epsilon_anneal_time': 1500000,
    'epsilon_finish': 0.05,
    'epsilon_start': 1.0,
    'evaluate': False,
    'gamma': 0.99,
    'grad_norm_clip': 10,
    'hypernet_embed': 64,
    'hypernet_layers': 2,
    'label': 'default_label',
    'learner': 'q_learner',
    'learner_log_interval': 10000,
    'load_step': 0,
    'local_results_path': 'results',
    'log_interval': 10000,
    'lr': 0.0005,
    'mac': 'basic_mac',
    'mixer': 'qmix',
    'mixing_embed_dim': 32,
    'name': 'qmix',
    'obs_agent_id': True,
    'obs_last_action': True,
    'optim_alpha': 0.99,
    'optim_eps': 1e-05,
    'per_alpha': 0.6,
    'per_beta': 0.4,
    'per_beta_anneal': 0.7,
    'per_epsilon': 0.2,
    'prioritised_replay': True,
    'repeat_id': 1,
    'rnn_hidden_dim': 64,
    'runner': 'async',
    'runner_log_interval': 10000,
    'save_model': True,
    'save_model_interval': 500000,
    'save_replay': False,
    'seed': 123076537,
    't_max': 5100000,
    'target_update_interval': 200,
    'test_greedy': True,
    'test_interval': 10000,
    'test_nepisode': 32,
    'use_cuda': True,
    'use_tensorboard': True}

*** Creating Camas Zoo Env ***
Map parameters: {'episode_timestep_limit': 500, 'max_agents': 5, 'initial': {'agent_0': ('(0, 3)', '(4, 4)'), 'agent_1': ('(0, 2)', '(4, 3)'), 'agent_2': ('(0, 2)', '(4, 2)'), 'agent_3': ('(4, 2)', '(0, 2)'), 'agent_4': ('(4, 2)', '(0, 1)')}, 'generator': 'supermarket', 'size': (5, 5), 'anna_map': True}
[DEBUG 20:40:44] root Connecting (0, 0) to (0, 1) with e_(0, 0)_(0, 1)
[DEBUG 20:40:44] root Connecting (0, 0) to (1, 0) with e_(0, 0)_(1, 0)
[DEBUG 20:40:44] root Connecting (0, 1) to (0, 0) with e_(0, 1)_(0, 0)
[DEBUG 20:40:44] root Connecting (0, 1) to (0, 2) with e_(0, 1)_(0, 2)
[DEBUG 20:40:44] root Connecting (0, 1) to (1, 1) with e_(0, 1)_(1, 1)
[DEBUG 20:40:44] root Connecting (0, 2) to (0, 1) with e_(0, 2)_(0, 1)
[DEBUG 20:40:44] root Connecting (0, 2) to (0, 3) with e_(0, 2)_(0, 3)
[DEBUG 20:40:44] root Connecting (0, 2) to (1, 2) with e_(0, 2)_(1, 2)
[DEBUG 20:40:44] root Connecting (0, 3) to (0, 2) with e_(0, 3)_(0, 2)
[DEBUG 20:40:44] root Connecting (0, 3) to (0, 4) with e_(0, 3)_(0, 4)
[DEBUG 20:40:44] root Connecting (0, 3) to (1, 3) with e_(0, 3)_(1, 3)
[DEBUG 20:40:44] root Connecting (0, 4) to (0, 3) with e_(0, 4)_(0, 3)
[DEBUG 20:40:44] root Connecting (0, 4) to (1, 4) with e_(0, 4)_(1, 4)
[DEBUG 20:40:44] root Connecting (1, 0) to (0, 0) with e_(1, 0)_(0, 0)
[DEBUG 20:40:44] root Connecting (1, 0) to (2, 0) with e_(1, 0)_(2, 0)
[DEBUG 20:40:44] root Connecting (1, 1) to (0, 1) with e_(1, 1)_(0, 1)
[DEBUG 20:40:44] root Connecting (1, 1) to (2, 1) with e_(1, 1)_(2, 1)
[DEBUG 20:40:44] root Connecting (1, 2) to (0, 2) with e_(1, 2)_(0, 2)
[DEBUG 20:40:44] root Connecting (1, 2) to (2, 2) with e_(1, 2)_(2, 2)
[DEBUG 20:40:44] root Connecting (1, 3) to (0, 3) with e_(1, 3)_(0, 3)
[DEBUG 20:40:44] root Connecting (1, 3) to (2, 3) with e_(1, 3)_(2, 3)
[DEBUG 20:40:44] root Connecting (1, 4) to (0, 4) with e_(1, 4)_(0, 4)
[DEBUG 20:40:44] root Connecting (1, 4) to (2, 4) with e_(1, 4)_(2, 4)
[DEBUG 20:40:44] root Connecting (2, 0) to (1, 0) with e_(2, 0)_(1, 0)
[DEBUG 20:40:44] root Connecting (2, 0) to (3, 0) with e_(2, 0)_(3, 0)
[DEBUG 20:40:44] root Connecting (2, 1) to (1, 1) with e_(2, 1)_(1, 1)
[DEBUG 20:40:44] root Connecting (2, 1) to (3, 1) with e_(2, 1)_(3, 1)
[DEBUG 20:40:44] root Connecting (2, 2) to (1, 2) with e_(2, 2)_(1, 2)
[DEBUG 20:40:44] root Connecting (2, 2) to (3, 2) with e_(2, 2)_(3, 2)
[DEBUG 20:40:44] root Connecting (2, 3) to (1, 3) with e_(2, 3)_(1, 3)
[DEBUG 20:40:44] root Connecting (2, 3) to (3, 3) with e_(2, 3)_(3, 3)
[DEBUG 20:40:44] root Connecting (2, 4) to (1, 4) with e_(2, 4)_(1, 4)
[DEBUG 20:40:44] root Connecting (2, 4) to (3, 4) with e_(2, 4)_(3, 4)
[DEBUG 20:40:44] root Connecting (3, 0) to (2, 0) with e_(3, 0)_(2, 0)
[DEBUG 20:40:44] root Connecting (3, 0) to (4, 0) with e_(3, 0)_(4, 0)
[DEBUG 20:40:44] root Connecting (3, 1) to (2, 1) with e_(3, 1)_(2, 1)
[DEBUG 20:40:44] root Connecting (3, 1) to (4, 1) with e_(3, 1)_(4, 1)
[DEBUG 20:40:44] root Connecting (3, 2) to (2, 2) with e_(3, 2)_(2, 2)
[DEBUG 20:40:44] root Connecting (3, 2) to (4, 2) with e_(3, 2)_(4, 2)
[DEBUG 20:40:44] root Connecting (3, 3) to (2, 3) with e_(3, 3)_(2, 3)
[DEBUG 20:40:44] root Connecting (3, 3) to (4, 3) with e_(3, 3)_(4, 3)
[DEBUG 20:40:44] root Connecting (3, 4) to (2, 4) with e_(3, 4)_(2, 4)
[DEBUG 20:40:44] root Connecting (3, 4) to (4, 4) with e_(3, 4)_(4, 4)
[DEBUG 20:40:44] root Connecting (4, 0) to (3, 0) with e_(4, 0)_(3, 0)
[DEBUG 20:40:44] root Connecting (4, 0) to (4, 1) with e_(4, 0)_(4, 1)
[DEBUG 20:40:44] root Connecting (4, 1) to (3, 1) with e_(4, 1)_(3, 1)
[DEBUG 20:40:44] root Connecting (4, 1) to (4, 0) with e_(4, 1)_(4, 0)
[DEBUG 20:40:44] root Connecting (4, 1) to (4, 2) with e_(4, 1)_(4, 2)
[DEBUG 20:40:44] root Connecting (4, 2) to (3, 2) with e_(4, 2)_(3, 2)
[DEBUG 20:40:44] root Connecting (4, 2) to (4, 1) with e_(4, 2)_(4, 1)
[DEBUG 20:40:44] root Connecting (4, 2) to (4, 3) with e_(4, 2)_(4, 3)
[DEBUG 20:40:44] root Connecting (4, 3) to (3, 3) with e_(4, 3)_(3, 3)
[DEBUG 20:40:44] root Connecting (4, 3) to (4, 2) with e_(4, 3)_(4, 2)
[DEBUG 20:40:44] root Connecting (4, 3) to (4, 4) with e_(4, 3)_(4, 4)
[DEBUG 20:40:44] root Connecting (4, 4) to (3, 4) with e_(4, 4)_(3, 4)
[DEBUG 20:40:44] root Connecting (4, 4) to (4, 3) with e_(4, 4)_(4, 3)
Possible agents ['agent_0', 'agent_1', 'agent_2', 'agent_3', 'agent_4']
Goal states {'agent_0': '(4, 4)', 'agent_1': '(4, 3)', 'agent_2': '(4, 2)', 'agent_3': '(0, 2)', 'agent_4': '(0, 1)'} 
Initial states {'agent_0': '(0, 3)', 'agent_1': '(0, 2)', 'agent_2': '(0, 2)', 'agent_3': '(4, 2)', 'agent_4': '(4, 2)'}
[DEBUG 20:40:45] my_main Buffer scheme: {'state': {'vshape': (5,)}, 'obs': {'vshape': 5, 'group': 'agents'}, 'actions': {'vshape': (1,), 'group': 'agents', 'dtype': torch.int64}, 'avail_actions': {'vshape': (5,), 'group': 'agents', 'dtype': torch.int32}, 'reward': {'vshape': (1,)}, 'terminated': {'vshape': (1,), 'dtype': torch.uint8}}, groups: {'agents': 5}
 -- using prioritised replay --
Initialising PER buffer, annealing beta from 0.4 to 1 over 3570000 timesteps.
[INFO 20:40:45] my_main Beginning training for 5100000 timesteps
/home/am-rutherford/repos/pymarl/src/components/episode_buffer.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  v = th.tensor(v, dtype=dtype, device=self.device)
/home/am-rutherford/repos/pymarl/src/components/episode_buffer.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  v = th.tensor(v, dtype=dtype, device=self.device)
[INFO 20:40:46] my_main t_env: 229 / 5100000
[INFO 20:40:46] my_main Estimated time left: 4 minutes, 18 seconds. Time passed: 0 seconds
av test time: 702.8099477834232 (82.00100617669193), av step count 500.0 (0.0), percentage at goal 60.0 (0.0) 32 episodes
[INFO 20:41:13] my_main Saving models to results/models/qmix__2022-03-20_20-40-44/229
saving PER objects to results/models/qmix__2022-03-20_20-40-44/229
[INFO 20:41:33] my_main t_env: 10300 / 5100000
[INFO 20:41:33] my_main Estimated time left: 6 hours, 38 minutes, 25 seconds. Time passed: 47 seconds
av test time: 699.0226279159455 (85.86300182651465), av step count 500.0 (0.0), percentage at goal 60.0 (0.0) 32 episodes
[INFO 20:42:01] my_main Recent Stats | t_env:      10300 | Episode:       41
ep_length_mean:          240.3875	epsilon:                   0.9937	grad_norm:                 0.5715	loss:                      0.0946
q_taken_mean:              0.0011	return_mean:               8.2731	return_std:                1.3964	target_mean:               0.0137
td_error_abs:              0.1593	test_ep_length_mean:     500.0000	test_reached_goal:        60.0000	test_return_mean:         10.6624
test_return_std:           0.9728	test_sim_time:           700.9163	
[INFO 20:42:30] my_main t_env: 20332 / 5100000
[INFO 20:42:30] my_main Estimated time left: 7 hours, 57 minutes, 3 seconds. Time passed: 1 minutes, 44 seconds
av test time: 991.896448985329 (343279.52960128826), av step count 372.34375 (41654.6630859375), percentage at goal 85.625 (80.859375) 32 episodes
[INFO 20:42:50] my_main Recent Stats | t_env:      20332 | Episode:       82
ep_length_mean:          241.8193	epsilon:                   0.9872	grad_norm:                 0.3694	loss:                      0.0754
q_taken_mean:              0.0084	return_mean:               7.9554	return_std:                1.6340	target_mean:               0.0128
td_error_abs:              0.1355	test_ep_length_mean:     457.4479	test_reached_goal:        68.5417	test_return_mean:         12.1499
test_return_std:           1.1522	test_sim_time:           797.9097	
[INFO 20:43:20] my_main t_env: 30596 / 5100000
[INFO 20:43:20] my_main Estimated time left: 6 hours, 50 minutes, 24 seconds. Time passed: 2 minutes, 34 seconds
av test time: 1380.5881382176367 (606.5534751177087), av step count 500.0 (0.0), percentage at goal 80.0 (0.0) 32 episodes
[INFO 20:43:46] my_main Recent Stats | t_env:      30596 | Episode:      126
ep_length_mean:          239.6827	epsilon:                   0.9808	grad_norm:                 0.2827	loss:                      0.0692
q_taken_mean:              0.0072	return_mean:               7.9990	return_std:                1.9482	target_mean:               0.0116
td_error_abs:              0.1233	test_ep_length_mean:     468.0859	test_reached_goal:        71.4062	test_return_mean:         12.8920
test_return_std:           0.9678	test_sim_time:           943.5793	
[INFO 20:44:16] my_main t_env: 40787 / 5100000
[INFO 20:44:16] my_main Estimated time left: 7 hours, 43 minutes, 34 seconds. Time passed: 3 minutes, 30 seconds
