{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/Users/alexrutherford/repos/pymarl/src",
    "dependencies": [
      "munch==2.5.0",
      "numpy==1.21.5",
      "PyYAML==6.0",
      "sacred==0.8.2",
      "torch==1.10.0"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "eaa4e46d0e6c4d861a88b09dedb96d4812804a19",
        "dirty": true,
        "url": "git@github.com:am-rutherford/pymarl.git"
      },
      {
        "commit": "eaa4e46d0e6c4d861a88b09dedb96d4812804a19",
        "dirty": true,
        "url": "git@github.com:am-rutherford/pymarl.git"
      },
      {
        "commit": "eaa4e46d0e6c4d861a88b09dedb96d4812804a19",
        "dirty": true,
        "url": "git@github.com:am-rutherford/pymarl.git"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources/main_ac85fb47de40ce98de2a16a2fd6ccae9.py"
      ],
      [
        "run.py",
        "_sources/run_c4c55b0d1f317a7178b841cd3013f643.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_aa14e56e60b01dd7a9ddb8e6cdf36b85.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/Users/alexrutherford/opt/anaconda3/envs/rapport/lib/python3.7/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"src/main.py\", line 35, in my_main\n    run(_run, config, _log)\n",
    "  File \"/Users/alexrutherford/repos/pymarl/src/run.py\", line 47, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/Users/alexrutherford/repos/pymarl/src/run.py\", line 165, in run_sequential\n    episode_batch = runner.run(test_mode=False)\n",
    "  File \"/Users/alexrutherford/repos/pymarl/src/runners/async_episode_runner.py\", line 65, in run\n    obs, reward, done, info = self.env.last()\n",
    "  File \"/Users/alexrutherford/opt/anaconda3/envs/rapport/lib/python3.7/site-packages/pettingzoo/utils/env.py\", line 137, in last\n    observation = self.observe(agent) if observe else None\n",
    "  File \"/Users/alexrutherford/repos/4yp_21_alex/camas-gym/camas_gym/envs/camas_zoo_masking.py\", line 347, in observe\n    if agent not in env.agents:  # If agent has terminated\n",
    "NameError: name 'env' is not defined\n"
  ],
  "heartbeat": "2022-02-20T20:53:49.810180",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i7-8559U CPU @ 2.70GHz",
    "hostname": "Alexs-MacBook-Pro-2.local",
    "os": [
      "Darwin",
      "Darwin-20.6.0-x86_64-i386-64bit"
    ],
    "python_version": "3.7.10"
  },
  "meta": {
    "command": "my_main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [],
      "help": false,
      "with": false
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2022-02-20T20:53:49.670344",
  "status": "FAILED",
  "stop_time": "2022-02-20T20:53:49.811210"
}